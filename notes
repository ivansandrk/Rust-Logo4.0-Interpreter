NOTES:
* Implement Logo list as VecDeque.
* Lexer
  * Implement Iter(able) on Lexer (? old comment).
  * Forgo Strings, use &str everywhere (? old comment).
  * Keywords go in parser (? old comment, parser also doesn't use them).
  * Rename Lexer::next_char to consume_char since the return value is never used.
  * (also remove stale comment in peek_char)
  * Replace some uses of match with if to simplify code.
  * Get rid of KEYWORDS (not used).
* Parser
  * Parser should have its own "Tokens", only Parser should depend on Lexer (currently Evaluator uses Lexer::Token).
* Evaluator
  * MakeListType! macro (old).
  * Implement (LIST arg1 arg2 arg3 ...) - functions that take N arguments (old).
  * Remove imports, create proper types for VecDeque & HashMap.
